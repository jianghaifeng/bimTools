<krpano>
	<!-- krpano 1.16.3 - Default Virtual Tour Skin -->

	<!-- Global Skin settings (can be overridden in the 'outer' xml) -->
	<skin_settings gyro="true"
	               thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"
	               thumbs_opened="false"
	               thumbs_text="true"
	               thumbs_dragging="true"
	               thumbs_onhoverscrolling="false"
	               thumbs_scrollbuttons="false"
	               thumbs_scrollindicator="false"
	               tooltips_thumbs="false"
	               tooltips_hotspots="false"
	               tooltips_mapspots="false"
	               controlbar_offset="20"
                 debug_removeTag_start="false"
	               />

	<autorotate enabled="false" waittime="3" accel="1" speed="6" horizon="0" tofov="off" />
	<!-- Skin Styles -->

	<!-- skin_base - the base skin image -->
	<style name="skin_base" url="superscene.png" />

	<!-- skin_glow - button glowing, if ondown/onup events were needed, then ondown2/onup2 need to be used instead when using this style -->
	<style name="skin_glow"
	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"
	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "
	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"
	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"
	       />

	<!-- skin_thumbtext_style - style/textfield for the (optional, skin_settings.thumbs_text) thumbnails texts -->
	<style name="skin_thumbtext_style" url="../plugins/textfield.swf" align="bottom" width="100%" autoheight="true" y="5" enabled="false" background="false" border="false" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:10px;" textshadow="1" />

	<!-- skin_hotspotstyle - style for the hotspots (note - the onclick event will be overwritten! the hotspots need to have a 'linkedscene' attribute to be clickable) -->
	<style name="skin_hotspotstyle" url="superscene_hotspot.png" scale="0.5" edge="top" oy="0"
	       distorted="true"
	       onclick="if(linkedscene, tween(scale,0.25,0.5); tween(oy,-20,0.5); tween(alpha,0,0.5); loadscene(get(linkedscene),null,MERGE,BLEND(1)); skin_updatescroll(); );"
	       onhover="if(linkedscene, showtext(get(scene[get(linkedscene)].title),SKIN_TOOLTIPS) );" onloaded="hotspot_animate();"
	       />


	<!-- tooltips textstyle -->
	<textstyle name="SKIN_TOOLTIPS" font="Arial" fontsize="16" bold="true" italic="false" background="false" border="false" textcolor="0xFFFFFF" effect="dropshadow(1,45,0x000000,4,1);" fadeintime="0.1" fadetime="0.05" />


	<!-- Skin Layout -->

	<layer name="skin_scroll_window" type="container" keep="true" align="leftbottom" width="100%" height="100%" x="0" y="60" y_opened="60" y_closed="-2" maskchildren="true" zorder="20">
		<layer name="skin_scroll_layer" type="container" align="leftbottom" width="100%" height="100%" x="0" y="-100%">
			<layer name="skin_topborder" style="skin_base" crop="2|0|60|12" align="topleft" edge="bottomleft" width="100%" height="12" x="0" y="0" enabled="false" />
			<layer name="skin_title" url="../plugins/textfield.swf" align="lefttop" edge="leftbottom" width="95%" height="32" autoheight="true" x="5" y="-3" zorder="4" enabled="false" background="false" border="false" css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;" textshadow="1" visible="false" />
			<layer name="skin_scroll_container" type="container" bgcolor="0x000000" bgalpha="0.5" align="lefttop" width="100%" height="100%" x="0" y="0" maskchildren="true">
				<layer name="skin_thumbs_container" type="container" align="lefttop" width="100%" height="100%" visible="false">
					<layer name="skin_thumbs_scrollleft"  style="skin_base|skin_glow" crop="0|64|64|64"  align="lefttop"  edge="left"  x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(+2,0));" visible="false" />
					<layer name="skin_thumbs_scrollright" style="skin_base|skin_glow" crop="64|64|64|64" align="righttop" edge="right" x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(-2,0));" visible="false" />
					<layer name="skin_thumbs_scrollindicator" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="lefttop" width="0" y="100" height="4" visible="false" enabled="false" />
					<layer name="skin_thumbs" state="closed" url="../plugins/scrollarea.swf" alturl="../plugins/scrollarea.js" direction="h" align="top" width="100%" height="100" zorder="1" onloaded="skin_updatescroll();" onscroll="skin_updatethumbscroll();" />
				</layer>
			</layer>
		</layer>
	</layer>
<!--缩略图工具条背景-->
    <layer name="skin_control_bar" keep="true" type="container" bgcolor="0x000000" bgalpha="0.5" align="leftbottom" width="100%" height="40" x="0" y="20" y_opened="20" y_closed="-42" zorder="3">
		<layer name="skin_btmborder"  style="skin_base"           crop="2|52|60|12"   align="bottomleft" edge="topleft" width="100%" height="12" x="0" y="0" enabled="false" />
		<layer name="skin_btn_prev"   style="skin_base|skin_glow" crop="0|64|64|64"   align="left"        x="5"    y="0"   scale="0.5" alpha="0.5"  onclick="skin_nextscene(-1);" />
		<layer name="skin_btn_next"   style="skin_base|skin_glow" crop="64|64|64|64"  align="right"       x="5"    y="0"   scale="0.5" alpha="0.5"  onclick="skin_nextscene(+1);" />
		<layer name="skin_btn_rota"    style="skin_base|skin_glow" crop="0|384|64|64" align="leftbottom"  x="90"   y="4"   scale="0.5" onclick="switch(autorotate.enabled);" visible="true" />
		<layer name="skin_btn_thumbs" style="skin_base|skin_glow" crop="0|128|64|64"  align="leftbottom"  x="50"   y="4"   scale="0.5" ondown2="skin_showmap(false); skin_showthumbs();" />
		<!--<layer name="skin_btn_map"    style="skin_base|skin_glow" crop="64|128|64|64" align="leftbottom"  x="90"   y="4"   scale="0.5" ondown2="skin_showthumbs(false); skin_showmap();" visible="false" />-->
		<layer name="skin_btn_lt"     style="skin_base|skin_glow" crop="0|192|64|64"  align="bottom"      x="-100" y="4"   scale="0.5" ondown2="set(hlookat_moveforce,-1);" onup2="set(hlookat_moveforce,0);" />
		<layer name="skin_btn_rt"     style="skin_base|skin_glow" crop="64|192|64|64" align="bottom"      x="-60"  y="4"   scale="0.5" ondown2="set(hlookat_moveforce,+1);" onup2="set(hlookat_moveforce,0);" />
		<layer name="skin_btn_up"     style="skin_base|skin_glow" crop="0|256|64|64"  align="bottom"      x="-20"  y="4"   scale="0.5" ondown2="set(vlookat_moveforce,-1);" onup2="set(vlookat_moveforce,0);" />
		<layer name="skin_btn_dn"     style="skin_base|skin_glow" crop="64|256|64|64" align="bottom"      x="+20"  y="4"   scale="0.5" ondown2="set(vlookat_moveforce,+1);" onup2="set(vlookat_moveforce,0);" />
		<layer name="skin_btn_in"     style="skin_base|skin_glow" crop="0|320|64|64"  align="bottom"      x="+60"  y="4"   scale="0.5" ondown2="set(fov_moveforce,-1);"     onup2="set(fov_moveforce,0);" />
		<layer name="skin_btn_ou"     style="skin_base|skin_glow" crop="64|320|64|64" align="bottom"      x="+100" y="4"   scale="0.5" ondown2="set(fov_moveforce,+1);"     onup2="set(fov_moveforce,0);" />
		<layer name="skin_btn_gyro"   style="skin_base|skin_glow" crop="0|384|64|64"  align="bottom"      x="140"  y="4"   scale="0.5" ondown2="skin_showmap(false);" onclick="switch(plugin[skin_gyro].enabled);" visible="false" devices="html5" />
		<layer name="skin_btn_fs"     style="skin_base|skin_glow" crop="0|576|64|64"  align="bottom"      x="140"  y="4"   scale="0.5" onclick="switch(fullscreen);" devices="fullscreensupport" />
		<layer name="skin_btn_hide"   style="skin_base|skin_glow" crop="0|448|64|64"  align="right"       x="50"   y="0"   scale="0.5" onclick="skin_hideskin()" />
		<layer name="skin_btn_show"   style="skin_base|skin_glow" crop="64|448|64|64" align="right"       x="5"    y="-36" scale="0.5" alpha="0" visible="false" onclick="skin_showskin()" />
	</layer>

	<layer name="skin_loadingtext"  keep="true" url="../plugins/textfield.swf" align="center" x="5" y="-5" html="loading..." visible="false" autoheight="true" background="false" border="false" enabled="false" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:22px; font-style:italic;" textshadow="2" />
	<layer name="skin_buttonglow"   keep="true" style="skin_base" crop="64|384|64|64" align="center" x="0" y="1" alpha="0.0" visible="false" enabled="false" />
	<layer name="skin_thumbborder"  keep="true" url="thumbborder.png" visible="false" enabled="false" align="lefttop" scale="0.5" ox="-2" oy="-2" />
	<layer name="skin_logo"         keep="true" url="" align="righttop" x="5" y="5" capture="false" accuracy="1" state="small" onclick="if(state == 'small', skin_openlogo(); , skin_closelogo('now'); opened_onclick(); );" />

	<plugin name="skin_gyro"        keep="true" url="" html5_url="../plugins/gyro.js" devices="html5+!firefox+!android" enabled="false" camroll="true" friction="0" velastic="0" onavailable="if(device.fullscreensupport, if(device.mobile,add(layer[skin_btn_gyro].x,40),add(layer[skin_btn_gyro].x,20));); set(layer[skin_btn_gyro].visible,true);" />
	<layer name="dblclick"  url="../plugins/dblclick.swf"  keep="true"  ondblclick="switch(fullscreen)"/>

	<layer name="info"  url="../plugins/textfield.swf" keep="true" align="center" visible="false" width="560" height="380" html="[font size='26'][b]潜江空中全景发布系统
[/b][/font][br][br][font size='16' color='#00EEEE'] [br][br] [/font]" css="text-align:center; color:#b04e31; font-family:宋体;" vcenter="true" backgroundcolor="0x000000" backgroundalpha="0.667" roundedge="10" border="true" shadow="1" shadowrange="10" shadowcolor="0xb04e31" >
		<layer name="closeinfo"  url="close.png"   x="-12" y="-12" keep="true" align="righttop" onclick="set(plugin[info].visible,false);"  />

    </layer>

	<style name="button"
		url="../plugins/textfield.swf"
		children="false"
		css="text-align:center; color:#ffffff; font-family:宋体; font-weight:bold; font-size:18px;"
		vcenter="true"
		backgroundcolor="0xb04e31" backgroundalpha="0.6" roundedge="10" border="false"
		shadow="0.1" shadowrange="8" shadowcolor="0xFFFFFF"
		/>
 <!--可以加载button-->
	<layer name="bg" type="container" x="0" align="lefttop" width="100" height="100"  bgcolor="0x000000" bgalpha="0" zorder="0" keep="true">
    </layer>

	<!-- Skin Events -->

	<events name="skin_events" keep="true"
	        onxmlcomplete="set(events[skin_events].onxmlcomplete,null); skin_startup(); "
	        onnewpano="skin_update_scene_infos();"
	        onresize="skin_onresize();"
	        onenterfullscreen="set(layer[skin_btn_fs].crop, '64|576|64|64');"
	        onexitfullscreen="set(layer[skin_btn_fs].crop, '0|576|64|64');"
	        />

	<contextmenu fullscreen="true" enterfs="全屏模式" exitfs="退出全屏">
		<item caption="KRPANO" />
		<item caption="FULLSCREEN" />
		<item caption="正常视角"      onclick="view_normal();" separator="true" />
		<item caption="鱼眼视角"      onclick="view_fisheye();" />
		<item caption="剖面视角"      onclick="view_architectural();" />
		<item caption="立体视角"      onclick="view_stereographic();" />
		<item caption="极射视角"      onclick="view_pannini();" />
		<item caption="小行星视角"    onclick="view_littleplanet();" />
		<item caption="技术支持：@ 纵横皆景"     separator="true" />
	</contextmenu>

	<action name="qtvr_cursor"><!--手形鼠标修改-->
		set(control.mousetype, moveto);
		set(control.touchtype, drag2d);
		set(cursors.url, skin/qtvr-cursors.png);
		set(cursors.type, 8way);
		set(cursors.move,       0|0|30|30);
		set(cursors.drag,      0|0|30|30);
		set(cursors.arrow_u,   0|0|30|30);
		set(cursors.arrow_d,   0|0|30|30);
		set(cursors.arrow_l,   0|0|30|30);
		set(cursors.arrow_r,   0|0|30|30);
		set(cursors.arrow_lu,  0|0|30|30);
		set(cursors.arrow_ru,  0|0|30|30);
		set(cursors.arrow_rd,  0|0|30|30);
		set(cursors.arrow_ld,  0|0|30|30);
	</action>

	<!-- actions for view changing -->
	<action name="view_normal">
		tween(view.fovmax,       150.0, distance(179, 1.00), easeoutquad);
		tween(view.architectural,  0.0, distance(1.0, 0.45), easeoutquad);
		tween(view.fisheye,        0.0, distance(1.0, 0.45), easeoutquad, set(view.stereographic,false); set(view.pannini,false); set(display.flash10,on); );
	</action>

	<action name="view_fisheye">
		set(display.flash10,off);
		tween(view.architectural, 0.0, distance(1.0, 0.30), easeoutquad);
		tween(view.fisheye,       0.0 ,distance(1.0, 0.30), easeoutquad, set(view.stereographic,false); set(view.pannini,false); set(view.fovmax,179); tween(view.fisheye, 0.35, distance(1.0,1.25)); );
	</action>

	<action name="view_architectural">
		tween(view.fovmax,       150.0, distance(179, 1.00), easeoutquad);
		tween(view.architectural,  1.0, distance(1.0, 0.45), easeoutquad);
		tween(view.fisheye,        0.0, distance(1.0, 0.45), easeoutquad, set(view.stereographic,false);set(view.pannini,false);set(display.flash10,on); );
	</action>

	<action name="view_stereographic">
		set(display.flash10, off);
		tween(view.architectural, 0.0, 0.25);
		set(backtonormalfirst, false);
		if(view.pannini       == true,  set(backtonormalfirst,true) );
		if(view.stereographic == false, set(backtonormalfirst,true) );
		if(backtonormalfirst, tween(view.fisheye, 0.0 ,distance(1.0, 0.25), easeoutquad, WAIT); );
		set(view.pannini, false);
		set(view.stereographic, true);
		set(view.fovmax, 150);
		tween(view.fisheye, 1.0, distance(1.0, 0.75), easeoutquad);
	</action>

	<action name="view_pannini">
		set(display.flash10, off);
		tween(view.architectural, 0.0, 0.25);
		set(backtonormalfirst, false);
		if(view.pannini       == false, set(backtonormalfirst,true) );
		if(view.stereographic == false, set(backtonormalfirst,true) );
		if(backtonormalfirst, tween(view.fisheye, 0.0 ,distance(1.0, 0.25), easeoutquad, WAIT); );
		set(view.pannini, true);
		set(view.stereographic, true);
		set(view.fovmax, 150);
		tween(view.fisheye, 1.0, distance(1.0, 0.75), easeoutquad);
	</action>

  <events name="evtShowLog" keep="true" isShowLog="false" onkeydown=" switch(events[evtShowLog].isShowLog); if(keycode == 79, showlog(get(events[evtShowLog].isShowLog));)" />

	<action name="view_littleplanet">
		set(display.flash10,off);
		tween(view.architectural, 0.0, 0.25);
		tween(view.vlookat,  90, distance(179, 1.50), easeoutquad);
		set(backtonormalfirst, false);
		if(view.pannini       == true,  set(backtonormalfirst,true) );
		if(view.stereographic == false, set(backtonormalfirst,true) );
		if(backtonormalfirst, tween(view.fisheye, 0.0 ,distance(1.0, 0.25), easeoutquad, WAIT); );
		set(view.pannini, false);
		set(view.stereographic, true);
		set(view.fovmax, 150);
		tween(view.fisheye, 1.0, distance(1.0, 0.75), easeoutquad);
		tween(view.fov,     150, distance(179, 0.75), easeoutquad);
	</action>

	<action name="skin_startup">
		if(device.mobile == false,
			copy(layer[skin_control_bar].y, skin_settings.controlbar_offset);
			copy(layer[skin_control_bar].y_opened, skin_settings.controlbar_offset);
			add(layer[skin_scroll_window].y, layer[skin_control_bar].height, layer[skin_control_bar].y);
			add(layer[skin_scroll_window].y_opened, layer[skin_control_bar].height, layer[skin_control_bar].y_opened);

			if(skin_settings.thumbs_opened, set(layer[skin_thumbs].state,'opened'); set(layer[skin_thumbs_container].visible,true); );

			copy(layer[skin_thumbs].draggable, skin_settings.thumbs_dragging);

			if(skin_settings.thumbs_onhoverscrolling,
				ifnot(device.touchdevice, set(layer[skin_thumbs].draggable, false));
				set(layer[skin_thumbs].onhover_autoscrolling, true);
			  );
		  );

		if(device.android, if(device.flash, set(skin_settings.bingmaps_zoombuttons, false); ));

		skin_addthumbs();
		skin_onresize();
		skin_updatescroll();

		copy(usegyro, skin_settings.gyro);
		if(device.desktop, set(usegyro, false));
		if(device.flash, set(usegyro, false));
		if(usegyro, copy(plugin[skin_gyro].url, plugin[skin_gyro].html5_url); );

		if(skin_settings.bingmaps == true,
			set(layer[skin_btn_map].visible, true);
			copy(layer[skin_map].key, skin_settings.bingmaps_key);
			copy(layer[skin_map_zoom_in].visible,  skin_settings.bingmaps_zoombuttons);
			copy(layer[skin_map_zoom_out].visible, skin_settings.bingmaps_zoombuttons);
			if(device.flash, copy(layer[skin_map].url, layer[skin_map].flash_url), copy(layer[skin_map].url, layer[skin_map].html5_url) );
		  ,
			if(device.mobile, copy(layer[skin_btn_gyro].x, layer[skin_btn_map].x) );
		  );
	</action>

	<action name="skin_addthumbs">
		copy(thumbwidth, skin_settings.thumbs_width);
		copy(thumbheight, skin_settings.thumbs_height);
		copy(thumbpadding, skin_settings.thumbs_padding);
		copy(thumbcrop, skin_settings.thumbs_crop);

		if(device.mobile,
			mul(thumbwidth,2);
			mul(thumbheight,2);
			mul(thumbpadding,2);
		  );

		add(thumbxoffset, thumbwidth, thumbpadding);
		mul(thumbxcenter, thumbxoffset, 0.5);
		mul(thumbbarwidth, thumbxoffset, scene.count);
		add(thumbbarwidth, thumbpadding);
		add(thumbbarheight, thumbpadding, thumbheight);
		add(thumbbarheight, thumbpadding);

		if (skin_settings.thumbs_scrollindicator,
			copy(layer[skin_thumbs_scrollindicator].y, thumbbarheight);
			add(thumbbarheight, layer[skin_thumbs_scrollindicator].height);
		);

		copy(layer[skin_thumbs].height, thumbbarheight);
		copy(layer[skin_thumbs].width, thumbbarwidth);

		mul(halfheight, thumbbarheight, 0.5);
		copy(layer[skin_thumbs_scrollleft].y, halfheight);
		copy(layer[skin_thumbs_scrollright].y, halfheight);

		for(set(i,0), i LT scene.count, inc(i),
			txtadd(thumbname,'skin_thumb_',get(i));
			addlayer(get(thumbname));
			copy(layer[get(thumbname)].url, scene[get(i)].thumburl);
			set(layer[get(thumbname)].keep, true);
			set(layer[get(thumbname)].parent, 'skin_thumbs');
			set(layer[get(thumbname)].align, lefttop);
			//copy(layer[get(thumbname)].crop, thumbcrop);
			copy(layer[get(thumbname)].width, thumbwidth);
			copy(layer[get(thumbname)].height, thumbheight);
			mul(thumbx, i, thumbxoffset);
			add(thumbx, thumbpadding);
			copy(layer[get(thumbname)].x, thumbx);
			copy(layer[get(thumbname)].y, thumbpadding);
			add(scene[get(i)].thumbx, thumbx, thumbxcenter);
			copy(scene[get(i)].thumby, thumbpadding);
			set(layer[get(thumbname)].linkedscene, get(scene[get(i)].name) );
			set(layer[get(thumbname)].onclick, copy(layer[skin_thumbborder].parent, name); loadscene(get(linkedscene), null, MERGE, BLEND(0.5)); );
			if(skin_settings.tooltips_thumbs,
				set(layer[get(thumbname)].onhover, showtext(get(scene[get(linkedscene)].title),SKIN_TOOLTIPS); );
			  );
			if(skin_settings.thumbs_text,
				txtadd(thumbtext, 'skin_thumbtext_', get(i));
				addlayer(get(thumbtext));
				layer[get(thumbtext)].loadstyle(skin_thumbtext_style);
				set(layer[get(thumbtext)].keep, true);
				set(layer[get(thumbtext)].parent, get(thumbname));
				set(layer[get(thumbtext)].html, get(scene[get(i)].title));
			  );
		   );
	</action>

	<action name="skin_onresize">
		mul(mh, stageheight, -1);
		if(layer[skin_thumbs].state == 'opened', add(mh,layer[skin_thumbs].height); );
		if(layer[skin_map].state == 'opened', sub(hh,stageheight,skin_settings.controlbar_offset); sub(hh,layer[skin_control_bar].height); sub(hh,32); copy(layer[skin_map].height, hh); add(mh,hh); );
		set(layer[skin_scroll_layer].y, get(mh));
		ifnot(device.mobile, if(stagewidth LT 480, skin_showbuttons(false), skin_showbuttons(true)); );
		
		<!--movemark();-->
	</action>

	<action name="skin_showbuttons">
		set(layer[skin_btn_lt].visible, %1);
		set(layer[skin_btn_rt].visible, %1);
		set(layer[skin_btn_up].visible, %1);
		set(layer[skin_btn_dn].visible, %1);
		set(layer[skin_btn_in].visible, %1);
		set(layer[skin_btn_ou].visible, %1);
		if(%1 == true,
			if(plugin[skin_gyro].available == true, set(layer[skin_btn_gyro].visible, %1) );
			if(device.fullscreensupport, set(layer[skin_btn_fs].visible, %1) );
		  ,
			set(layer[skin_btn_gyro].visible, %1);
			set(layer[skin_btn_fs].visible, %1);
		  );
	</action>

	<action name="skin_updatescroll">
		if(layer[skin_thumbs].loaded,
			set(cursceneindex, 0);
			if(xml.scene, copy(cursceneindex, scene[get(xml.scene)].index));
			layer[skin_thumbs].setcenter(get(scene[get(cursceneindex)].thumbx), get(scene[get(cursceneindex)].thumby));
		  );
	</action>

	<action name="skin_updatethumbscroll">
		copy(padding,skin_settings.thumbs_padding);
		if(device.mobile, mul(padding,2));

		if(skin_settings.thumbs_scrollbuttons,
			if(loverflow GT 0, set(layer[skin_thumbs_scrollleft].visible,true),  set(layer[skin_thumbs_scrollleft].visible,false) );
			if(roverflow GT 0, set(layer[skin_thumbs_scrollright].visible,true), set(layer[skin_thumbs_scrollright].visible,false) );
		  );

		if(skin_settings.thumbs_scrollindicator,
			if(woverflow GT 0,
				set(layer[skin_thumbs_scrollindicator].visible,true);
				sub(iw,pixelwidth,woverflow);
				div(pw,iw,pixelwidth);
				div(px,loverflow,woverflow);
				mul(pw,iw);
				copy(layer[skin_thumbs_scrollindicator].width,pw);
				sub(iw,pw);
				sub(iw,padding);
				sub(iw,padding);
				mul(px,iw);
				add(px,padding);
				copy(layer[skin_thumbs_scrollindicator].x,px);
			  ,
				set(layer[skin_thumbs_scrollindicator].visible,false);
			  );
		  );
	</action>

	<action name="skin_update_scene_infos">
		if(xml.scene !== null,
			if(scene[get(xml.scene)].index GE 0,
				if(title, txtadd(layer[skin_title].html, get(title), ' - ', get(scene[get(xml.scene)].title) ); , copy(layer[skin_title].html, scene[get(xml.scene)].title ); );
				delayedcall(0.1, set(layer[skin_title].visible,true) );
		
				if(scene[get(xml.scene)].index GT 0,
					set(layer[skin_btn_prev].enabled, true);
					set(layer[skin_btn_prev].alpha, 1.0);
				  ,
					set(layer[skin_btn_prev].enabled, false);
					set(layer[skin_btn_prev].alpha, 0.3);
				  );
		
				sub(lastsceneindex, scene.count, 1);
				if(scene[get(xml.scene)].index LT lastsceneindex,
					set(layer[skin_btn_next].enabled, true);
					set(layer[skin_btn_next].alpha, 1.0);
				  ,
					set(layer[skin_btn_next].enabled, false);
					set(layer[skin_btn_next].alpha, 0.3);
				  );
		
				txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(scene[get(xml.scene)].index));
				set(layer[skin_thumbborder].visible, true);
		
				if(scene[get(xml.scene)].mapspotname,
					layer[skin_map].activatespot(get(scene[get(xml.scene)].mapspotname));
					layer[skin_map].pantospot(get(scene[get(xml.scene)].mapspotname));
				  );
			  );
		  );
	</action>

	<action name="skin_nextscene">
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		if(newsceneindex GE 0,
			if(newsceneindex LT scene.count,
				txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));
				layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
				loadscene(get(scene[get(newsceneindex)].name), null, MERGE, BLEND(0.5));
			  );
		  );
	</action>

	<action name="skin_nextscene_loop">
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		sub(lastsceneindex, scene.count, 1);
		if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
		if(newsceneindex GT lastsceneindex, set(newsceneindex,0));
		layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
		loadscene(get(scene[get(newsceneindex)].name), null, MERGE, BLEND(0.5));
	</action>

	<action name="skin_showloading">
		set(layer[skin_loadingtext].visible, %1);
	</action>

	<action name="skin_buttonglow">
		if(%1 != null,
			set(strength,0.7);
			if(%2 != null, set(strength,%2));
			set(layer[skin_buttonglow].parent, %1);
			set(layer[skin_buttonglow].visible, true);
			tween(layer[skin_buttonglow].alpha, get(strength), 0.07);
		  ,
			tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default, set(layer[skin_buttonglow].parent, null); set(layer[skin_buttonglow].visible, false); );
		  );
	</action>

	<action name="skin_hideskin">
		if(layer[skin_map].state != 'closed', skin_showmap(false); wait(0.4); );
		if(layer[skin_thumbs].state != 'closed', skin_showthumbs(false); wait(0.25); );
		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_closed), 0.5, easeOutQuint);
		tween(layer[skin_control_bar].y, get(layer[skin_control_bar].y_closed), 0.5, easeOutQuint);
		set(layer[skin_btn_show].visible,true);
		tween(layer[skin_btn_show].alpha, 1, 0.25, easeOutQuint);
	</action>

	<action name="skin_showskin">
		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_opened), 0.5, easeOutQuint);
		tween(layer[skin_control_bar].y, get(layer[skin_control_bar].y_opened), 0.5, easeOutQuint);
		set(layer[skin_btn_show].visible,false);
		tween(layer[skin_btn_show].alpha,0,0);
	</action>

  <action name="skin_showmap">
    if(true);
  </action>

	<action name="skin_showthumbs">
		if(%1 == null, if(layer[skin_thumbs].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );
		mul(mh, layer[skin_scroll_layer].pixelheight, -1);
		if(layer[skin_scroll_layer].y == -100%, copy(layer[skin_scroll_layer].y,mh));
		if(show,
			set(layer[skin_thumbs].state, 'opened');
			add(mh, layer[skin_thumbs].height);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
			set(layer[skin_thumbs_container].visible, true);
			tween(layer[skin_thumbs_container].alpha, 1.0, 0.25);
			tween(layer[skin_map].alpha, 0.0, 0.25, default, set(layer[skin_map].visible,false));
		  ,
			set(layer[skin_thumbs].state, 'closed');
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_thumbs_container].visible, false););
		  );
	</action>

	<action name="hotspot_animate">
		if(alpha ==1,
			tween(alpha,0.3,default,default,hotspot_animate(););
			,
			tween(alpha,1,default,default,hotspot_animate(););
		);
	</action>


  <!--地图热点样式-->
  <style name="mapspot_style" keep="true" url="hs_url.png" align="lefttop" edge="bottom" scale="0.75"
		 crop="0|0|30|34"
		 onovercrop="30|0|30|34"
         ondowncrop="60|0|30|34"
		 selectedcrop="60|0|30|34" 
		 onhover="if(linkedscene, showtext(get(scene[get(linkedscene)].title),SKIN_TOOLTIPS) );"/>
	       
	<layer name="map_bg" keep="true" type="container" visible="false" x="8" y="8" align="righttop" width="319" height="315" bgcolor="0xFAF8EE" bgalpha="0.1" >
	  <layer name="mapscroll" url="../plugins/scrollarea.swf" align="center" edge="center" width="778" height="1100" scale="0.35" >
			<!-- 地图1 --><!--
	  <layer name="map0" url="map_a.jpg" keep="true" align="lefttop" x="2" y="2" handcursor="false" visible="false" alpha="0.5" scale="0.35"
	  	onhover="set(layer[map0].alpha,1);set(ismap0,true);set(control.mousefovchange,0);" onout="set(layer[map0].alpha,0.5);set(ismap0,false);set(control.mousefovchange,1)">
			--><!-- 雷达容器 --><!--
			<layer name="radarmask0" type="container" align="lefttop" width="100%" height="100%" maskchildren="true">

				--><!-- 雷达插件 --><!--
			<layer name="radar0" visible="true"
				       url="../plugins/radar.swf" 
				       align="lefttop" edge="center" zorder="1"
				       scale="0.5"
				       fillcolor="0xFFFFFF" fillalpha="0.4"
				       linecolor="0xFF0000" linewidth="0.5" linealpha="0.5"
				       headingoffset="0"
				       />
				--><!-- 在此加入地图热点 --><!--
	 <layer name="spot1" style="mapspot_style" x="33.5%" y="7.58%" linkedscene="scene_1" onclick="if(linkedscene, loadscene(get(linkedscene),null,MERGE,BLEND(1)); skin_updatescroll(); );"/>
	 <layer name="spot2" style="mapspot_style" x="56.79%" y="2.63%" linkedscene="scene_2" onclick="if(linkedscene, loadscene(get(linkedscene),null,MERGE,BLEND(1)); skin_updatescroll(); );"/>
	 <layer name="spot3" style="mapspot_style" x="18.29%" y="65.96%" linkedscene="scene_3" onclick="if(linkedscene, loadscene(get(linkedscene),null,MERGE,BLEND(1)); skin_updatescroll(); );"/>
     <layer name="spot4" style="mapspot_style" x="57.43%" y="50.71%" linkedscene="scene_4" onclick="if(linkedscene, loadscene(get(linkedscene),null,MERGE,BLEND(1)); skin_updatescroll(); );"/>
     
             
             
	               --><!-- 地图容器/开关按钮 --><!--
	                 
			<layer name="activespot0" url="hs_url.png" crop="60|0|30|34" align="lefttop" edge="bottom" scale="0.75" zorder="3" visible="true" />
			</layer>
		</layer>-->
		
		
	</layer>
</layer>
  <!--<layer name="close0" url="close.png" align="righttop" edge="center" x="15" y="13" onclick="switch(layer[map_bg].visible);switch(layer[close0].rotate,45,0);" onhover="showtext(close map);" visible="true" keep="true" />-->

<events name="mapscale" keep="true" onmousewheel="mapwheel();"/>
<action name="mapwheel">
	if(ismap0,mul(sit,get(wheeldelta),0.05);
		mul(sit,layer[map0].scale);
		add(layer[map0].scale,sit);
		add(layer[map1].scale,sit);
		add(layer[mapscroll].scale,sit);
		if(layer[map0].scale GT 1,set(layer[map0].scale,1);set(layer[mapscroll].scale,1););
		if(layer[map0].scale LT 0.35,set(layer[map0].scale,0.35);set(layer[mapscroll].scale,0.35););
		mul(newy,sity,layer[mapscroll].scale);
		mul(newx,sitx,layer[mapscroll].scale);
		layer[mapscroll].scrolltocenter(get(newx),get(newy));
		);
</action>
	<action name="activatemap">
		<!-- copy the spot position to the radar and activespot position -->
		set(plugin[map0].visible,false);
		set(plugin[radarmask0].visible,false);
		set(plugin[map%1].visible,true);
		set(plugin[radarmask%1].visible,true);
		<!-- show the radar and the activespot -->
	</action>
	<action name="activatespot">
		<!-- copy the spot position to the radar and activespot position -->
		set(layer[radar%3].visible,true);
		set(layer[activespot%3].visible,true);
		copy(layer[radar%3].x, layer[%1].x);
		copy(layer[radar%3].y, layer[%1].y);
		copy(layer[activespot%3].x, layer[%1].x);
		copy(layer[activespot%3].y, layer[%1].y);
		<!-- set the radar heading -->
		set(layer[radar%3].headingoffset, %2);
		
		<!-- mul(sitx,layer[%1].x,14);-->
		<!-- mul(newx,sitx,layer[mapscroll].scale);-->
		<!-- mul(sity,layer[%1].y,9.9);-->
		
	  mul(xpercent, get(layer[map%3].width), 0.01);
    mul(sitx,layer[%1].x, xpercent);
    mul(newx,sitx,layer[mapscroll].scale);
    mul(ypercent, get(layer[map%3].height), 0.01);
    mul(sity,layer[%1].y, ypercent);
		
		mul(newy,sity,layer[mapscroll].scale);
		<!--layer[mapscroll].scrolltocenter(get(newx),get(newy));-->
		<!-- show the radar and the activespot -->
	</action>

  <!--拖动热点-->
  <action name="draghotspot">
      <![CDATA[
		  if(%1 != dragging,
			  spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery);
			  sub(drag_adjustx, mouse.stagex, hotspotcenterx); 
			  sub(drag_adjusty, mouse.stagey, hotspotcentery); 
			  draghotspot(dragging);
		    ,
			  if(pressed,
				  sub(dx, mouse.stagex, drag_adjustx);
				  sub(dy, mouse.stagey, drag_adjusty);
				  screentosphere(dx, dy, ath, atv);
				  copy(print_ath, ath);
				  copy(print_atv, atv);
				  roundval(print_ath, 3);
				  roundval(print_atv, 3);
				  txtadd(plugin[hotspotinfo].html, '&lt;hotspot name="',get(name),'"[br]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ath="',get(print_ath),'"[br]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;atv="',get(print_atv),'"[br]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...[br]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/&gt;');
				  delayedcall(0, draghotspot(dragging) );
			    );
		    );
	    ]]>
  </action>

  <action name="add_all_the_time_tooltip">
    txtadd(tooltipname, 'tooltip_', %1);
    addplugin(get(tooltipname));
    txtadd(plugin[get(tooltipname)].parent, 'hotspot[', %1, ']');
    set(plugin[get(tooltipname)].url,'../plugins/textfield.swf');
    set(plugin[get(tooltipname)].align,top);
    set(plugin[get(tooltipname)].edge,bottom);
    set(plugin[get(tooltipname)].x,0);
    set(plugin[get(tooltipname)].y,0);
    set(plugin[get(tooltipname)].width,100);
    set(plugin[get(tooltipname)].autoheight,true);
    set(plugin[get(tooltipname)].background,true);
    set(plugin[get(tooltipname)].backgroundcolor,0x000000);
    set(plugin[get(tooltipname)].roundedge,15);
    set(plugin[get(tooltipname)].backgroundalpha,0.5);
    set(plugin[get(tooltipname)].border,true);
    set(plugin[get(tooltipname)].glow,4);
    set(plugin[get(tooltipname)].glowcolor,0xFFFFFF);
    set(plugin[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;');
    set(plugin[get(tooltipname)].textshadow,1);
    set(plugin[get(tooltipname)].textshadowrange,6.0);
    set(plugin[get(tooltipname)].textshadowangle,90);
    copy(plugin[get(tooltipname)].html,hotspot[%1].title);
    set(plugin[get(tooltipname)].enabled,false);
  </action>

	<!--拖动标注-->
	<action name="dragPOI">
		<!--长按删除等待时间(秒)-->
		set(dragpoi_passsecond, 1.5);
		mul(dragpoi_passsecond, 62);
		
		<!--<![CDATA[-->
		if(%1 != dragging,
			<!--开始移动-->
		
			<!--长按删除-计时-->
			set(dragpoi_ispass, true);
			set(dragpoi_passcount, 0);
			set(dragpoi_isdeletetag, false);
			
			<!--获取另一个热点名-->
			indexoftxt(dstvar, get(name), "poi_img_", 0);
			subtxt(potsName, get(name), 8, 100);
			if(dstvar == -1,
				txtadd(poilayerName, "poi_img_", get(potsName));
				,
				txtadd(poilayerName, "poi_txt_", get(potsName));
			);
			
			<!--鼠标点击的点和热点位置的偏差-->
			spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery);
			sub(drag_adjustx, mouse.stagex, hotspotcenterx); 
			sub(drag_adjusty, mouse.stagey, hotspotcentery); 
			
			<!--鼠标起始位置-->
			copy(startx, mouse.stagex);
			copy(starty, mouse.stagey);

			set(editDeleteTag, "true");
			set(editMoveTag, "false");
			copy(editDelName, name);

			dragPOI(dragging);
			,
			if(pressed,
				<!--长按删除-->
				if(dragpoi_ispass,
					inc(dragpoi_passcount);
					if(dragpoi_passcount > dragpoi_passsecond,
						set(dragpoi_ispass, false);
						<!--弹出确认删除按钮-->
						layer[get(_pluginaddmark_name)]._pluginaddmark_ctoolpassdeletemark_onclick(get(name));
						trace("abs");
						set(dragpoi_isdeletetag, true);
					);
				);
				
				<!--鼠标偏移的距离-->
				sub(dx, mouse.stagex, startx);
				sub(dy, mouse.stagey, starty);
				
				<!--鼠标移动位置-->
				if(mouse.stagex == startx,
					if(mouse.stagey == starty,
					,
					set(editDeleteTag, "false");
					set(dragpoi_ispass, false);
					)
					,
					set(editDeleteTag, "false");
					set(dragpoi_ispass, false);
				);
				
				<!--热点需要移动的位置-->
				spheretoscreen(ath, atv, oldx, oldy);
				add(oldx, dx);
				add(oldy, dy);
				screentosphere(oldx, oldy, newx, newy);
				copy(ath, newx);
				copy(atv, newy);
		
				copy(hotspot[get(poilayerName)].ath, newx);
				copy(hotspot[get(poilayerName)].atv, newy);
				
				<!--移动多边形热点-->
				for(set(i,0), hotspot[get(name)].point[get(i)], inc(i),
					spheretoscreen(hotspot[get(name)].point[get(i)].ath, hotspot[get(name)].point[get(i)].atv, oldx, oldy);
					add(oldx, dx);
					add(oldy, dy);
					screentosphere(oldx, oldy, newx, newy);
					copy(hotspot[get(name)].point[get(i)].ath, newx);
					copy(hotspot[get(name)].point[get(i)].atv, newy);
				);
				
				<!--设置当前鼠标位置为起始位置-->
				copy(startx, mouse.stagex);
				copy(starty, mouse.stagey);
				
				if(dragpoi_isdeletetag == false,
					<!--不是删除-->
					delayedcall(0, dragPOI(dragging) );
				);
				,
				<!--移动结束-->
				if(editDeleteTag == "false",
					set(editMoveTag, "true");
					layer[get(_pluginaddmark_name)]._pluginaddmark_ctoolmovemark_markmoved(get(name));
				);
				set(editDeleteTag, "false");
				<!--trace(get(dragpoi_passcount));-->
			);
		);
		<!--]]>-->
	</action>
	
		<!--拖动标注-->
	<action name="dragTag">
		<!--trace("abc");-->
		<!--<![CDATA[-->
		if(%1 != dragging,
			<!--开始移动-->
		
			<!--长按删除等待时间(秒)-->
			set(dragpoi_passsecond, 1.5);
			mul(dragpoi_passsecond, 62);
		
			<!--长按删除-计时-->
			set(dragpoi_ispass, true);
			set(dragpoi_passcount, 0);
			set(dragpoi_isdeletetag, false);
			
			<!--获取另一个热点名-->
			<!--copy(tagname, get(parent));-->
			indexoftxt(dstvar, get(name), "tag_conback_", 0);
			<!--subtxt(potsName, get(name), 9, 100);-->
			<!--txtadd(tagname, "tag_con_", get(potsName));-->
			copy(tagname, name);
			
			<!--鼠标点击的点和热点位置的偏差-->
			spheretoscreen(layer[get(tagname)].ath, layer[get(tagname)].atv, hotspotcenterx, hotspotcentery);
			sub(drag_adjustx, mouse.stagex, hotspotcenterx); 
			sub(drag_adjusty, mouse.stagey, hotspotcentery); 
			
			<!--鼠标起始位置-->
			copy(startx, mouse.stagex);
			copy(starty, mouse.stagey);

			dragTag(dragging);
			,
			if(pressed,
				<!--长按删除-->
				if(dragpoi_ispass,
					inc(dragpoi_passcount);
					if(dragpoi_passcount > dragpoi_passsecond,
						set(dragpoi_ispass, false);
						<!--弹出确认删除按钮-->
						layer[get(_pluginaddmark_name)]._pluginaddmark_ctoolpassdeletemark_onclick(get(tagname));
						<!--trace("abs");-->
						set(dragpoi_isdeletetag, true);
					);
				);
				
				<!--鼠标偏移的距离-->
				sub(dx, mouse.stagex, startx);
				sub(dy, mouse.stagey, starty);
				
				<!--鼠标移动位置-->
				if(mouse.stagex == startx,
					if(mouse.stagey == starty,
					,
					set(dragpoi_ispass, false);
					)
					,
					set(dragpoi_ispass, false);
				);
				
				<!--热点需要移动的位置-->
				spheretoscreen(layer[get(tagname)].ath, layer[get(tagname)].atv, oldx, oldy);
				add(oldx, dx);
				add(oldy, dy);
				screentosphere(oldx, oldy, newx, newy);
				copy(layer[get(tagname)].x, oldx);
				copy(layer[get(tagname)].y, oldy);
				copy(layer[get(tagname)].ath, newx);
				copy(layer[get(tagname)].atv, newy);
				<!--trace(get(tagname));-->
				
				<!--设置当前鼠标位置为起始位置-->
				copy(startx, mouse.stagex);
				copy(starty, mouse.stagey);
				
				if(dragpoi_isdeletetag == false,
					<!--不是删除-->
					delayedcall(0, dragTag(dragging) );
				);
				,
				<!--移动结束-->
				layer[get(_pluginaddmark_name)]._pluginaddmark_ctoolmovemark_markmoved(get(name));
				<!--trace(get(dragpoi_passcount));-->
			);
		);
		<!--]]>-->
	</action>

	<!--layer随视角移动-->
	<events onviewchange="skin_onviewchange();" onnewpano="skin_onnewpano();"/>
	<action name="skin_onviewchange">
		<!--trace(get(stagewidth));-->
		movemark();
	</action>
	<action name="skin_onnewpano">
		movemarkinit();
	</action>
	
	<action name="clear_array">
		copy(arr_clear_data, %1);
		<!--for(,%1.count != 0,,
			%1.removearrayitem(0);
		);-->
		trace(get(arr_clear_data.count));
	</action>
	<!--当前场景layer集合-->
	<array_name name="movemark_data" />
	<!--初始化-->
	<action name="movemarkinit">
		set(arr_clear_data, null);
		copy(move_tagname, layer[0].name);
		set(idx, 0);
		
		for(set(i,1), move_tagname, inc(i),
			subtxt(layertype, get(move_tagname), 0, 8);
			
			if(layertype == "tag_con_",
				indexoftxt(dstvar, get(move_tagname), "_spot", 0);
				if(dstvar != -1,
					sub(scene_name_len, dstvar, 8);
					subtxt(scene_name, get(move_tagname), 8, get(scene_name_len));
					if(xml.scene == scene_name,
						<!--trace(get(scene_name));-->
			
						copy(movemark_data[get(idx)].value, move_tagname);
						set(layer[get(move_tagname)].visible, true);
						inc(idx);
						<!--trace(get(layer[get(move_tagname)].keep));-->
						<!--trace(get(move_tagname));-->
					);
				);
			);
			<!--trace(get(layertype));-->
			copy(move_tagname, layer[get(i)].name);
			<!--trace(get(movemark_data.count));-->
		);
		<!--trace(get(movemark_data.count));-->
	</action>
	<action name="movemark">
		<!--if(movemark_isinit,
			,
			set(movemark_isinit, true);
			movemarkinit();
		);-->
		delayedcall(0, movemark_delay());
		
	</action>

	<action name="movemark_delay">
		
		for(set(i,0), i LT movemark_data.count, inc(i),
			copy(move_tagname, movemark_data[get(i)].value);
			spheretoscreen(layer[get(move_tagname)].ath, layer[get(move_tagname)].atv, newx, newy);
			if(newx,
				if(newy,
				copy(layer[get(move_tagname)].x, newx);
				copy(layer[get(move_tagname)].y, newy);
				,
				set(layer[get(move_tagname)].x, 99999);
				set(layer[get(move_tagname)].y, 99999);
				);
				,
				set(layer[get(move_tagname)].x, 99999);
				set(layer[get(move_tagname)].y, 99999);
			);
		);
	</action>

	<!-- a special action for dragging the text only vertically with a certain range -->
	<action name="dragmark_text">
		copy(parent_height, layer[get(parent)].height);
		<!--trace(get(layer[get(parent)].name));-->

		if(%1 != dragging,
		copy(drag_currenty, y);
		copy(drag_stagey, mouse.stagey);
		dragmark_text(dragging);
		,
		if(pressed,
		sub(dy, mouse.stagey, drag_stagey);
		add(y1, drag_currenty, dy);
		add(y2, y1, pixelheight);
		sub(y2, parent_height);
		if(y1 GT 0, set(y1,0));
		if(y2 LT 0, sub(y1,y2));
		copy(y,y1);
		delayedcall(0, dragmark_text(dragging) );
		);
		);
	</action>

	<action name="onclick_delmark">
		layer[get(_pluginaddmark_name)]._pluginaddmark_ctooldeletemark_onclick(get(name));
	</action>

	<!--文本-文本-->
	<style name="txt_txt" url="../plugins/textfield.swf" height="40"
	background="true"  backgroundcolor="0x222200"
	maskchildren="false" roundedge="10"
	autowidth="true"
	scale="1"
	backgroundalpha="0.7"
	css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:23px; text-indent:0px;"
	border="false"
	zoom="false"
	borderalpha="0.9"
	borderwidth="2"
	bordercolor="0x7CFC00"
	edge="left"
	onover="set(border,true);"
	onout="set(border,false);"
	/>

	<!--标注-文本-->
	<style name="poi_txt" url="../plugins/textfield.swf" height="40"
	background="true"  backgroundcolor="0x222200"
	maskchildren="false" roundedge="10"
	width="300"
	autoheight="true"
	scale="1"
	backgroundalpha="0.7"
	css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:23px; text-indent:20px;"
	border="false"
	zoom="false"
	borderalpha="0.9"
	borderwidth="2"
	bordercolor="0x7CFC00"
	edge="left"
	onover="set(border,true);"
	onout="set(border,false);"
	/>

	<!--标注-图片-->
	<style name="poi_img"
	  width="30" height="30" scale="0.7"
	  zoom="false"
	  backgroundalpha="1"
	  alpha="1"
	  enabled="true"
	  edge="left"
	  zorder="10"
	/>

	<!--标注-弹出框-->
	<style name="poi_layer"
		   url="../plugins/textfield.swf"
		   keep="false"
		   align="center"
		   width="560"
		   height="380"
		   css="text-align:left;color:#000000;"
		   vcenter="true"
		   backgroundcolor="0xFFFFFF"
		   backgroundalpha="1.0"
		   roundedge="10"
		   border="true"
		   shadow="1"
		   shadowrange="10"
		   shadowcolor="0x00FF00"
		   visible="false"
         />

	<!--标注-关闭弹出框-->
	<style name="poi_close"
		 url="close.png"
		 keep="false"
		 align="righttop"
		 width="30"
		 height="30"
		 x="-12"
		 y="-12"
		 visible="true"
         />

	<!--线-->
	<style name="line_img"
		   onhover="if(title, showtext(get(title));)"
		   borderwidth="3"
		   bordercolor="0x00FF0000"
		   borderalpha="0.6"
		   borderwidthhover="3"
		   bordercolorhover="0x00FF0000"
		   borderalphahover="0.3"
		   fillcolor="0x0000FF00"
		   fillalpha="0"
		   borderalphaover="0"
         />

	<!--tag-->
	<style name="tag_con" align="lefttop" x="0" y="0" width="270" height="110" autoheight="true" bgcapture="true" zorder="10" visible="false"
		   url="../plugins/textfield.swf" children="false" enabled="true"
		   border="false" borderwidth="2" bordercolor="0x7CFC00" borderalpha="0.7" roundedge="10"
		   background="true" backgroundcolor="0x222200" backgroundalpha="0.7"
		   css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:20px; text-indent:20px;"
		   onover="set(border,true);"
		   onout="set(border,false);"/>
	<!--背景容器-->
	<style name="tag_conback" type="container" width="300" height="110" zorder="10"/>
	<!--背景-->
	<style name="tag_back" url="../plugins/textfield.swf" width="100%" height="100%" children="false" edge="lefttop" enabled="true"
			border="false" borderwidth="2" bordercolor="0x7CFC00" borderalpha="0.7" roundedge="10"
			background="true" backgroundcolor="0x222200" backgroundalpha="0.7"
			onover="set(border,true);"
			onout="set(border,false);"/>
	<!--标题容器-->
	<style name="tag_contitle" type="container" x="10" y="5" width="280" height="25" align="lefttop" maskchildren="true" zorder="20"/>
	<!--标题图标-->
	<style name="tag_img" enabled="false" align="lefttop" x="3" y="3" width="20" height="20" edge="lefttop" zoom="false"/>
	<!--标题-->
	<style name="tag_title" url="../plugins/textfield.swf" x="0" y="0" align="top" width="100%" children="false" enabled="true"
		   border="false" borderwidth="2" bordercolor="0x7CFC00" borderalpha="0.7" roundedge="10"
		   background="true" backgroundcolor="0x222200" backgroundalpha="0.7"
		   css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:17px;"
		   onover="set(border,true);"
		   onout="set(border,false);"/>
	
	<!--类型容器-->
	<style name="tag_contype1" type="container" align="lefttop" x="10" y="30" width="40" height="30" bgcolor="0x111100" bgalpha="0.0" maskchildren="true" zorder="20"/>
	<style name="tag_contype2" type="container" align="lefttop" x="10" y="70" width="40" height="30" bgcolor="0x111100" bgalpha="0.0" maskchildren="true" zorder="20"/>
	<!--信息容器-->
	<style name="tag_coninfo1"  type="container" align="lefttop" x="50" y="30" width="240" height="30" bgcolor="0x111100" bgalpha="0.5" maskchildren="true" zorder="20"/>
	<style name="tag_coninfo2"  type="container" align="lefttop" x="50" y="70" width="240" height="30" bgcolor="0x111100" bgalpha="0.5" maskchildren="true" zorder="20"/>
	
	<!--类型-->
	<style name="tag_type"  url="../plugins/textfield.swf" x="0" y="0" width="100%" height="100%" children="false" align="center"
		border="false" background="false" enabled="false"
		css="text-align:left; color:#FFFFFF; font-family:Arial; font-size:17px;"/>
	<!--信息-->
	<style name="tag_info"  url="../plugins/textfield.swf" x="0" y="0" width="100%" children="false" align="lefttop" autoheight="true"
		border="false" background="false"
		css="text-align:left; color:#FFFFFF; font-family:Arial; font-size:23px;"
		ondown="dragmark_text();"/>
</krpano>
